@model ToyStore.ViewModels.Shared.IFilterVM
<script>
    function resetfilterform() {
        $("#filterform").trigger("reset");
    }
</script>
<form action="/@this.ViewContext.RouteData.Values["controller"]/@this.ViewContext.RouteData.Values["action"]" method="get" id="filterform">

    @foreach (var pi in Model.GetType().GetProperties())
    {
        //Get Skip Attribute
        if (pi.GetCustomAttributes().Where(a => a is SkipAttribute).FirstOrDefault() != null)
        {
            continue;
        }

        //Get Label
        Attribute attribute = pi.GetCustomAttributes().Where(a => a is DisplayNameAttribute).FirstOrDefault();
        String label = attribute == null ? pi.Name : ((DisplayNameAttribute)attribute).DisplayName.ToString();

        if (pi.GetCustomAttributes().Where(a => a is HiddenAttribute).FirstOrDefault() != null)
        {
            <input id="@(Model.Prefix)_@(pi.Name)" type="hidden" name="@(Model.Prefix).@(pi.Name)" value="@pi.GetValue(Model)" />
        }
        else if (pi.GetCustomAttributes().Where(a => a is DropDownFilter).FirstOrDefault() != null)
        {
            DropDownFilter dropDownFilter = (DropDownFilter)pi.GetCustomAttributes().Where(a => a is DropDownFilter).FirstOrDefault();

            <div style="display:inline-block">
                <label for="@(Model.Prefix)_@(pi.Name)">@label</label>
                <select id="@(Model.Prefix)_@(pi.Name)" name="@(Model.Prefix).@dropDownFilter.TargetModelProperty">
                    @foreach (var obj in (IEnumerable<object>)pi.GetValue(Model))
                    {

                        <option value="@(obj.GetType().GetProperty(dropDownFilter.DataProperty).GetValue(obj))"
                                @((bool)obj.GetType().GetProperty("Selected").GetValue(obj) ? "selected" : "" )>
                            @(obj.GetType().GetProperty(dropDownFilter.DisplayProperty).GetValue(obj))
                        </option>
                    }
                </select>
            </div>
        }

        else if (pi.GetCustomAttributes().Where(a => a is DateTimeAttribute).FirstOrDefault() != null)
        {
            <div style="display:inline-block">
                <label for="@(Model.Prefix)_@(pi.Name)">@label</label>
                <input class="DateTimePicker" id="@(Model.Prefix)_@(pi.Name)" type="text" name="@(Model.Prefix).@(pi.Name)" value="@pi.GetValue(Model)" />
            </div>
        }

        else
        {
            <div style="display:inline-block">
                <label for="@(Model.Prefix)_@(pi.Name)">@label</label>
                <input id="@(Model.Prefix)_@(pi.Name)" type="text" name="@(Model.Prefix).@(pi.Name)" value="@pi.GetValue(Model)" />
            </div>
        }

    }
    @*
    <hr />
    @foreach (var pi in Model.GetType().GetProperties())
    {
        if (pi.GetCustomAttributes().Where(a => a is CheckBoxAttribute).FirstOrDefault() != null)
        {
            <input type="checkbox" name="@(Model.Prefix).@(pi.Name)" value="@pi.GetValue(Model)">
        }
    }*@

    <input type="submit" value="Search" class="button" /><a href="#" class="button" onclick="resetfilterform();">reset</a>
</form>
